// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© atraderstoolbox

//@version=5
indicator("TICKERS", overlay = true)

import TradingView/RelativeValue/2 as rv

symbol1 = input.symbol('CME_MINI:ES1!')
symbol2 = input.symbol('CME_MINI:NQ1!')
symbol3 = input.symbol('CME_MINI:RTY1!')
symbol4 = input.symbol('CBOT:YM1!')
symbol5 = input.symbol('TVC:VIX')
symbol6 = input.symbol('TVC:DXY')
symbol7 = input.symbol('CBOT:UB1!')
symbol8 = input.symbol('BINANCE:BTCUSDT')
symbol9 = input.symbol('COMEX:GC1!')
symbol10 = input.symbol('NYMEX:CL1!')


// ib levels
input_ib = input.session('0930-1030', title='IB Time (EST)', group = 'IB Settings')
f_calculate_ibh() =>
    is_ib = time == time(timeframe.period, str.format('{0}:1234567', input_ib), 'America/New_York')
    var float ibh = na
    ibh := is_ib and not is_ib[1] ? high 
     : is_ib ? math.max(high, ibh[1])
     : ibh[1]
f_calculate_ibl() =>
    is_ib = time == time(timeframe.period, str.format('{0}:1234567', input_ib), 'America/New_York')
    var float ibl = na
    ibl := is_ib and not is_ib[1] ? low 
     : is_ib ? math.min(low, ibl[1])
     : ibl[1]



// on levels
input_on = input.session('1800-0930', title='IB Time (EST)', group = 'ON Settings')
f_calculate_onh() =>
    is_on = time == time(timeframe.period, str.format('{0}:1234567', input_on), 'America/New_York')
    var float onh = na
    onh := is_on and not is_on[1] ? high 
     : is_on ? math.max(high, onh[1])
     : onh[1]
f_calculate_onl() =>
    is_on = time == time(timeframe.period, str.format('{0}:1234567', input_on), 'America/New_York')
    var float onl = na
    onl := is_on and not is_on[1] ? low 
     : is_on ? math.min(low, onl[1])
     : onl[1]



// rvol
input_rvol = input.session('0930-1600', title='RV0L Time (EST)', group = 'RVOL Settings')
rvol_days = input.int(20, title = 'RVOL Days', group = 'RVOL Settings')

f_calculat_rvol() =>
    is_rvol = time == time(timeframe.period, str.format('{0}:1234567', input_rvol), 'America/New_York')
    bool anchor = is_rvol and not is_rvol[1]
    bool useCumulative = true
    float currVol = rv.calcCumulativeSeries(volume, anchor, useCumulative)
    float pastVol  = rv.averageAtTime(volume, rvol_days, anchor, useCumulative)
    float volRatio = is_rvol ? math.round(currVol / pastVol * 100,0) : na
    volRatio


f_daily_data(symbol) =>
    [current_price, pct_change, prior_close, prior_high, prior_low, today_open, today_high, today_low] = 
         request.security(symbol, 'D', 
         [close, 
         math.round(( (close - close[1]) / close[1] ) * 100, 2),
         close[1],
         high[1],
         low[1],
         open,
         high,
         low
         ])
    [current_price, pct_change, prior_close, prior_high, prior_low, today_open, today_high, today_low]


f_minute_data(symbol) =>
    [vwap, ibh, ibl, onh, onl] =
         request.security(symbol, "1",
         [math.round_to_mintick(ta.vwap),
         f_calculate_ibh(),
         f_calculate_ibl(),
         f_calculate_onh(),
         f_calculate_onl()
         ])

f_5minute_data(symbol) =>
    rvol =
         request.security(symbol, "5",
         f_calculat_rvol()
         )








[current_price1, pct_change1, prior_close1, prior_high1, prior_low1, today_open1, today_high1, today_low1] = f_daily_data(symbol1)
[current_price2, pct_change2, prior_close2, prior_high2, prior_low2, today_open2, today_high2, today_low2] = f_daily_data(symbol2)
[current_price3, pct_change3, prior_close3, prior_high3, prior_low3, today_open3, today_high3, today_low3] = f_daily_data(symbol3)
[current_price4, pct_change4, prior_close4, prior_high4, prior_low4, today_open4, today_high4, today_low4] = f_daily_data(symbol4)
[current_price5, pct_change5, prior_close5, prior_high5, prior_low5, today_open5, today_high5, today_low5] = f_daily_data(symbol5)
[current_price6, pct_change6, prior_close6, prior_high6, prior_low6, today_open6, today_high6, today_low6] = f_daily_data(symbol6)
[current_price7, pct_change7, prior_close7, prior_high7, prior_low7, today_open7, today_high7, today_low7] = f_daily_data(symbol7)
[current_price8, pct_change8, prior_close8, prior_high8, prior_low8, today_open8, today_high8, today_low8] = f_daily_data(symbol8)
[current_price9, pct_change9, prior_close9, prior_high9, prior_low9, today_open9, today_high9, today_low9] = f_daily_data(symbol9)
[current_price10, pct_change10, prior_close10, prior_high10, prior_low10, today_open10, today_high10, today_low10] = f_daily_data(symbol10)

[vwap1, ibh1, ibl1, onh1, onl1] = f_minute_data(symbol1)
[vwap2, ibh2, ibl2, onh2, onl2] = f_minute_data(symbol2)
[vwap3, ibh3, ibl3, onh3, onl3] = f_minute_data(symbol3)
[vwap4, ibh4, ibl4, onh4, onl4] = f_minute_data(symbol4)
[vwap5, ibh5, ibl5, onh5, onl5] = f_minute_data(symbol5)
[vwap6, ibh6, ibl6, onh6, onl6] = f_minute_data(symbol6)
[vwap7, ibh7, ibl7, onh7, onl7] = f_minute_data(symbol7)
[vwap8, ibh8, ibl8, onh8, onl8] = f_minute_data(symbol8)
[vwap9, ibh9, ibl9, onh9, onl9] = f_minute_data(symbol9)
[vwap10, ibh10, ibl10, onh10, onl10] = f_minute_data(symbol10)

rvol1 = f_5minute_data(symbol1)
rvol2 = f_5minute_data(symbol2)
rvol3 = f_5minute_data(symbol3)
rvol4 = f_5minute_data(symbol4)
rvol5 = f_5minute_data(symbol5)
rvol6 = f_5minute_data(symbol6)
rvol7 = f_5minute_data(symbol7)
rvol8 = f_5minute_data(symbol8)
rvol9 = f_5minute_data(symbol9)
rvol10 = f_5minute_data(symbol10)


var bool us_futures_open = false
var bool crypto_open = false
if barstate.islast

    us_futures_open := str.format_time(time, 'HH:mm', 'America/New_York') == '18:00' 
    crypto_open := str.format_time(time, 'HH:mm', 'America/New_York') == '19:00' 
    authorization = ""
    alert('{"Authorization": "' + str.tostring(authorization) + '",
     "us_futures_open": "' + str.tostring(us_futures_open) + '", 
     "crypto_open": "' + str.tostring(crypto_open) + '", 
     "stocks": [
     {"symbol": "' + symbol1 + '", 
         "price": "' + str.tostring(current_price1) + '", 
         "vwap": "' + str.tostring(vwap1) + '",
         "rvol": "' + str.tostring(rvol1) + '",
         "ibh": "' + str.tostring(ibh1) + '", 
         "ibl": "' + str.tostring(ibl1) + '",  
         "onh": "' + str.tostring(onh1) + '",  
         "onl": "' + str.tostring(onl1) + '",  
         "pct_change": "' + str.tostring(pct_change1) + '", 
         "prior_close": "' + str.tostring(prior_close1) + '", 
         "prior_high": "' + str.tostring(prior_high1) + '", 
         "prior_low": "' + str.tostring(prior_low1) + '", 
         "today_open": "' + str.tostring(today_open1) + '", 
         "today_high": "' + str.tostring(today_high1) + '", 
         "today_low": "' + str.tostring(today_low1) + '"}, 
     {"symbol": "' + symbol2 + '", 
         "price": "' + str.tostring(current_price2) + '", 
         "vwap": "' + str.tostring(vwap2) + '",
         "rvol": "' + str.tostring(rvol2) + '",
         "ibh": "' + str.tostring(ibh2) + '", 
         "ibl": "' + str.tostring(ibl2) + '",  
         "onh": "' + str.tostring(onh2) + '",  
         "onl": "' + str.tostring(onl2) + '",  
         "pct_change": "' + str.tostring(pct_change2) + '", 
         "prior_close": "' + str.tostring(prior_close2) + '", 
         "prior_high": "' + str.tostring(prior_high2) + '", 
         "prior_low": "' + str.tostring(prior_low2) + '", 
         "today_open": "' + str.tostring(today_open2) + '", 
         "today_high": "' + str.tostring(today_high2) + '", 
         "today_low": "' + str.tostring(today_low2) + '"}, 
     {"symbol": "' + symbol3 + '", 
         "price": "' + str.tostring(current_price3) + '", 
         "vwap": "' + str.tostring(vwap3) + '", 
         "rvol": "' + str.tostring(rvol3) + '",
         "ibh": "' + str.tostring(ibh3) + '", 
         "ibl": "' + str.tostring(ibl3) + '", 
         "onh": "' + str.tostring(onh3) + '",  
         "onl": "' + str.tostring(onl3) + '",  
         "pct_change": "' + str.tostring(pct_change3) + '", 
         "prior_close": "' + str.tostring(prior_close3) + '", 
         "prior_high": "' + str.tostring(prior_high3) + '", 
         "prior_low": "' + str.tostring(prior_low3) + '", 
         "today_open": "' + str.tostring(today_open3) + '", 
         "today_high": "' + str.tostring(today_high3) + '", 
         "today_low": "' + str.tostring(today_low3) + '"}, 
     {"symbol": "' + symbol4 + '", 
         "price": "' + str.tostring(current_price4) + '", 
         "vwap": "' + str.tostring(vwap4) + '", 
         "rvol": "' + str.tostring(rvol4) + '",
         "ibh": "' + str.tostring(ibh4) + '", 
         "ibl": "' + str.tostring(ibl4) + '", 
         "onh": "' + str.tostring(onh4) + '",  
         "onl": "' + str.tostring(onl4) + '",  
         "pct_change": "' + str.tostring(pct_change4) + '", 
         "prior_close": "' + str.tostring(prior_close4) + '", 
         "prior_high": "' + str.tostring(prior_high4) + '", 
         "prior_low": "' + str.tostring(prior_low4) + '", 
         "today_open": "' + str.tostring(today_open4) + '", 
         "today_high": "' + str.tostring(today_high4) + '", 
         "today_low": "' + str.tostring(today_low4) + '"}, 
     {"symbol": "' + symbol5 + '", 
         "price": "' + str.tostring(current_price5) + '", 
         "vwap": "' + str.tostring(vwap5) + '",
         "rvol": "' + str.tostring(rvol5) + '",
         "ibh": "' + str.tostring(ibh5) + '", 
         "ibl": "' + str.tostring(ibl5) + '", 
         "onh": "' + str.tostring(onh5) + '",  
         "onl": "' + str.tostring(onl5) + '",   
         "pct_change": "' + str.tostring(pct_change5) + '", 
         "prior_close": "' + str.tostring(prior_close5) + '", 
         "prior_high": "' + str.tostring(prior_high5) + '", 
         "prior_low": "' + str.tostring(prior_low5) + '", 
         "today_open": "' + str.tostring(today_open5) + '", 
         "today_high": "' + str.tostring(today_high5) + '", 
         "today_low": "' + str.tostring(today_low5) + '"}, 
     {"symbol": "' + symbol6 + '", 
         "price": "' + str.tostring(current_price6) + '", 
         "vwap": "' + str.tostring(vwap6) + '", 
         "rvol": "' + str.tostring(rvol6) + '",
         "ibh": "' + str.tostring(ibh6) + '", 
         "ibl": "' + str.tostring(ibl6) + '", 
         "onh": "' + str.tostring(onh6) + '",  
         "onl": "' + str.tostring(onl6) + '",  
         "pct_change": "' + str.tostring(pct_change6) + '", 
         "prior_close": "' + str.tostring(prior_close6) + '", 
         "prior_high": "' + str.tostring(prior_high6) + '", 
         "prior_low": "' + str.tostring(prior_low6) + '", 
         "today_open": "' + str.tostring(today_open6) + '", 
         "today_high": "' + str.tostring(today_high6) + '", 
         "today_low": "' + str.tostring(today_low6) + '"}, 
     {"symbol": "' + symbol7 + '", 
         "price": "' + str.tostring(current_price7) + '", 
         "vwap": "' + str.tostring(vwap7) + '", 
         "rvol": "' + str.tostring(rvol7) + '",
         "ibh": "' + str.tostring(ibh7) + '", 
         "ibl": "' + str.tostring(ibl7) + '", 
         "onh": "' + str.tostring(onh7) + '",  
         "onl": "' + str.tostring(onl7) + '",  
         "pct_change": "' + str.tostring(pct_change7) + '", 
         "prior_close": "' + str.tostring(prior_close7) + '", 
         "prior_high": "' + str.tostring(prior_high7) + '", 
         "prior_low": "' + str.tostring(prior_low7) + '", 
         "today_open": "' + str.tostring(today_open7) + '", 
         "today_high": "' + str.tostring(today_high7) + '", 
         "today_low": "' + str.tostring(today_low7) + '"}, 
     {"symbol": "' + symbol8 + '", 
         "price": "' + str.tostring(current_price8) + '", 
         "vwap": "' + str.tostring(vwap8) + '", 
         "rvol": "' + str.tostring(rvol8) + '",
         "ibh": "' + str.tostring(ibh8) + '", 
         "ibl": "' + str.tostring(ibl8) + '", 
         "onh": "' + str.tostring(onh8) + '",  
         "onl": "' + str.tostring(onl8) + '",  
         "pct_change": "' + str.tostring(pct_change8) + '", 
         "prior_close": "' + str.tostring(prior_close8) + '", 
         "prior_high": "' + str.tostring(prior_high8) + '", 
         "prior_low": "' + str.tostring(prior_low8) + '", 
         "today_open": "' + str.tostring(today_open8) + '", 
         "today_high": "' + str.tostring(today_high8) + '", 
         "today_low": "' + str.tostring(today_low8) + '"}, 
     {"symbol": "' + symbol9 + '", 
         "price": "' + str.tostring(current_price9) + '", 
         "vwap": "' + str.tostring(vwap9) + '",
         "rvol": "' + str.tostring(rvol9) + '",
         "ibh": "' + str.tostring(ibh9) + '", 
         "ibl": "' + str.tostring(ibl9) + '", 
         "onh": "' + str.tostring(onh9) + '",  
         "onl": "' + str.tostring(onl9) + '",  
         "pct_change": "' + str.tostring(pct_change9) + '", 
         "prior_close": "' + str.tostring(prior_close9) + '", 
         "prior_high": "' + str.tostring(prior_high9) + '", 
         "prior_low": "' + str.tostring(prior_low9) + '", 
         "today_open": "' + str.tostring(today_open9) + '", 
         "today_high": "' + str.tostring(today_high9) + '", 
         "today_low": "' + str.tostring(today_low9) + '"}, 
     {"symbol": "' + symbol10 + '", 
         "price": "' + str.tostring(current_price10) + '",
         "vwap": "' + str.tostring(vwap10) + '", 
         "rvol": "' + str.tostring(rvol10) + '",
         "ibh": "' + str.tostring(ibh10) + '", 
         "ibl": "' + str.tostring(ibl10) + '", 
         "onh": "' + str.tostring(onh10) + '",  
         "onl": "' + str.tostring(onl10) + '",  
         "pct_change": "' + str.tostring(pct_change10) + '", 
         "prior_close": "' + str.tostring(prior_close10) + '", 
         "prior_high": "' + str.tostring(prior_high10) + '", 
         "prior_low": "' + str.tostring(prior_low10) + '", 
         "today_open": "' + str.tostring(today_open10) + '", 
         "today_high": "' + str.tostring(today_high10) + '", 
         "today_low": "' + str.tostring(today_low10) + '"}'
     +  ']}' 
     , alert.freq_once_per_bar_close)



